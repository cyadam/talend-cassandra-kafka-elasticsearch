// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Big Data
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package debat_national.cassandra2kafka_1_0;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

//the import part of tJavaRow_1
//import java.util.List;

@SuppressWarnings("unused")

/**
 * Job: cassandra2kafka Purpose: <br>
 * Description: <br>
 * 
 * @author user@talend.com
 * @version 7.2.1.20190620_1446
 * @status
 */
public class cassandra2kafka implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

			if (topic != null) {

				this.setProperty("topic", topic.toString());

			}

			if (cassandra_host != null) {

				this.setProperty("cassandra_host", cassandra_host.toString());

			}

			if (cassandra_port != null) {

				this.setProperty("cassandra_port", cassandra_port.toString());

			}

			if (column_family != null) {

				this.setProperty("column_family", column_family.toString());

			}

			if (data != null) {

				this.setProperty("data", data.toString());

			}

			if (group_cassandra != null) {

				this.setProperty("group_cassandra", group_cassandra.toString());

			}

			if (kafka_host != null) {

				this.setProperty("kafka_host", kafka_host.toString());

			}

			if (keyspace != null) {

				this.setProperty("keyspace", keyspace.toString());

			}

			if (local != null) {

				this.setProperty("local", local.toString());

			}

			if (topic_elasticsearch != null) {

				this.setProperty("topic_elasticsearch", topic_elasticsearch.toString());

			}

			if (url != null) {

				this.setProperty("url", url.toString());

			}

			if (zookeeper_host != null) {

				this.setProperty("zookeeper_host", zookeeper_host.toString());

			}

		}

		public String topic;

		public String getTopic() {
			return this.topic;
		}

		public String cassandra_host;

		public String getCassandra_host() {
			return this.cassandra_host;
		}

		public String cassandra_port;

		public String getCassandra_port() {
			return this.cassandra_port;
		}

		public String column_family;

		public String getColumn_family() {
			return this.column_family;
		}

		public String data;

		public String getData() {
			return this.data;
		}

		public String group_cassandra;

		public String getGroup_cassandra() {
			return this.group_cassandra;
		}

		public String kafka_host;

		public String getKafka_host() {
			return this.kafka_host;
		}

		public String keyspace;

		public String getKeyspace() {
			return this.keyspace;
		}

		public String local;

		public String getLocal() {
			return this.local;
		}

		public String topic_elasticsearch;

		public String getTopic_elasticsearch() {
			return this.topic_elasticsearch;
		}

		public String url;

		public String getUrl() {
			return this.url;
		}

		public String zookeeper_host;

		public String getZookeeper_host() {
			return this.zookeeper_host;
		}
	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "1.0";
	private final String jobName = "cassandra2kafka";
	private final String projectName = "DEBAT_NATIONAL";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = java.util.Collections
			.synchronizedMap(new java.util.HashMap<String, Object>());

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					cassandra2kafka.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(cassandra2kafka.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tCassandraInput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tJavaRow_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tKafkaOutput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tPostjob_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tPostjob_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tCassandraClose_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraClose_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tPrejob_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tPrejob_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tKafkaConnection_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tKafkaConnection_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tCassandraConnection_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraConnection_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tWriteJSONField_1_Out_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		tWriteJSONField_1_In_error(exception, errorComponent, globalMap);

	}

	public void tWriteJSONField_1_In_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tCassandraInput_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tCassandraInput_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tPostjob_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tCassandraClose_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tPrejob_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tKafkaConnection_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tCassandraConnection_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tWriteJSONField_1_In_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka = new byte[0];
		static byte[] commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public String theme;

		public String getTheme() {
			return this.theme;
		}

		public String id;

		public String getId() {
			return this.id;
		}

		public String reference;

		public String getReference() {
			return this.reference;
		}

		public String title;

		public String getTitle() {
			return this.title;
		}

		public java.util.Date createdAt;

		public java.util.Date getCreatedAt() {
			return this.createdAt;
		}

		public java.util.Date publishedAt;

		public java.util.Date getPublishedAt() {
			return this.publishedAt;
		}

		public java.util.Date updatedAt;

		public java.util.Date getUpdatedAt() {
			return this.updatedAt;
		}

		public String trashed;

		public String getTrashed() {
			return this.trashed;
		}

		public String trashedStatus;

		public String getTrashedStatus() {
			return this.trashedStatus;
		}

		public String authorId;

		public String getAuthorId() {
			return this.authorId;
		}

		public String authorType;

		public String getAuthorType() {
			return this.authorType;
		}

		public String authorZipCode;

		public String getAuthorZipCode() {
			return this.authorZipCode;
		}

		public String Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__;

		public String getQuel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__() {
			return this.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__;
		}

		public String Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__;

		public String getQue_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__() {
			return this.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__;
		}

		public String Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__;

		public String getDiriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__() {
			return this.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__;
		}

		public String Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__;

		public String getSi_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__() {
			return this.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__;
		}

		public String A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__;

		public String getA_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__() {
			return this.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__;
		}

		public String Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__;

		public String getSi_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__() {
			return this.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__;
		}

		public String Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__;

		public String getQu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__() {
			return this.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__;
		}

		public String Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__;

		public String getQuelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__() {
			return this.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__;
		}

		public String Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__;

		public String getPar_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__() {
			return this.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__;
		}

		public String Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__;

		public String getSi_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__() {
			return this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__;
		}

		public String Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___;

		public String getAvez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___() {
			return this.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___;
		}

		public String Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__;

		public String getSi_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__() {
			return this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__;
		}

		public String Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__;

		public String getSi_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__() {
			return this.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__;
		}

		public String Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__;

		public String getEt_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__() {
			return this.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__;
		}

		public String Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__;

		public String getQue_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__() {
			return this.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__;
		}

		public String Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__;

		public String getY_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__() {
			return this.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.theme == null) ? 0 : this.theme.hashCode());

				result = prime * result + ((this.reference == null) ? 0 : this.reference.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row1Struct other = (row1Struct) obj;

			if (this.theme == null) {
				if (other.theme != null)
					return false;

			} else if (!this.theme.equals(other.theme))

				return false;

			if (this.reference == null) {
				if (other.reference != null)
					return false;

			} else if (!this.reference.equals(other.reference))

				return false;

			return true;
		}

		public void copyDataTo(row1Struct other) {

			other.theme = this.theme;
			other.id = this.id;
			other.reference = this.reference;
			other.title = this.title;
			other.createdAt = this.createdAt;
			other.publishedAt = this.publishedAt;
			other.updatedAt = this.updatedAt;
			other.trashed = this.trashed;
			other.trashedStatus = this.trashedStatus;
			other.authorId = this.authorId;
			other.authorType = this.authorType;
			other.authorZipCode = this.authorZipCode;
			other.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ = this.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__;
			other.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ = this.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__;
			other.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ = this.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__;
			other.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ = this.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__;
			other.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ = this.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__;
			other.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ = this.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__;
			other.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ = this.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__;
			other.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ = this.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__;
			other.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ = this.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__;
			other.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ = this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__;
			other.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ = this.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___;
			other.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ = this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__;
			other.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ = this.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__;
			other.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ = this.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__;
			other.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ = this.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__;
			other.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ = this.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__;

		}

		public void copyKeysDataTo(row1Struct other) {

			other.theme = this.theme;
			other.reference = this.reference;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DEBAT_NATIONAL_cassandra2kafka.length) {
					if (length < 1024 && commonByteArray_DEBAT_NATIONAL_cassandra2kafka.length == 0) {
						commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[1024];
					} else {
						commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DEBAT_NATIONAL_cassandra2kafka, 0, length);
				strReturn = new String(commonByteArray_DEBAT_NATIONAL_cassandra2kafka, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka) {

				try {

					int length = 0;

					this.theme = readString(dis);

					this.id = readString(dis);

					this.reference = readString(dis);

					this.title = readString(dis);

					this.createdAt = readDate(dis);

					this.publishedAt = readDate(dis);

					this.updatedAt = readDate(dis);

					this.trashed = readString(dis);

					this.trashedStatus = readString(dis);

					this.authorId = readString(dis);

					this.authorType = readString(dis);

					this.authorZipCode = readString(dis);

					this.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ = readString(
							dis);

					this.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ = readString(dis);

					this.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ = readString(
							dis);

					this.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ = readString(
							dis);

					this.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ = readString(
							dis);

					this.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ = readString(
							dis);

					this.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ = readString(
							dis);

					this.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ = readString(
							dis);

					this.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ = readString(
							dis);

					this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ = readString(
							dis);

					this.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ = readString(
							dis);

					this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ = readString(
							dis);

					this.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ = readString(
							dis);

					this.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ = readString(
							dis);

					this.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ = readString(
							dis);

					this.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ = readString(
							dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.theme, dos);

				// String

				writeString(this.id, dos);

				// String

				writeString(this.reference, dos);

				// String

				writeString(this.title, dos);

				// java.util.Date

				writeDate(this.createdAt, dos);

				// java.util.Date

				writeDate(this.publishedAt, dos);

				// java.util.Date

				writeDate(this.updatedAt, dos);

				// String

				writeString(this.trashed, dos);

				// String

				writeString(this.trashedStatus, dos);

				// String

				writeString(this.authorId, dos);

				// String

				writeString(this.authorType, dos);

				// String

				writeString(this.authorZipCode, dos);

				// String

				writeString(
						this.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__,
						dos);

				// String

				writeString(this.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__, dos);

				// String

				writeString(
						this.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__,
						dos);

				// String

				writeString(
						this.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__,
						dos);

				// String

				writeString(this.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__, dos);

				// String

				writeString(
						this.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__,
						dos);

				// String

				writeString(
						this.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__,
						dos);

				// String

				writeString(
						this.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__,
						dos);

				// String

				writeString(
						this.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__,
						dos);

				// String

				writeString(
						this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__,
						dos);

				// String

				writeString(
						this.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___,
						dos);

				// String

				writeString(
						this.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__,
						dos);

				// String

				writeString(
						this.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__,
						dos);

				// String

				writeString(this.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__,
						dos);

				// String

				writeString(
						this.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__,
						dos);

				// String

				writeString(
						this.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__,
						dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("theme=" + theme);
			sb.append(",id=" + id);
			sb.append(",reference=" + reference);
			sb.append(",title=" + title);
			sb.append(",createdAt=" + String.valueOf(createdAt));
			sb.append(",publishedAt=" + String.valueOf(publishedAt));
			sb.append(",updatedAt=" + String.valueOf(updatedAt));
			sb.append(",trashed=" + trashed);
			sb.append(",trashedStatus=" + trashedStatus);
			sb.append(",authorId=" + authorId);
			sb.append(",authorType=" + authorType);
			sb.append(",authorZipCode=" + authorZipCode);
			sb.append(
					",Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__="
							+ Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__);
			sb.append(",Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__="
					+ Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__);
			sb.append(",Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__="
					+ Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__);
			sb.append(
					",Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__="
							+ Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__);
			sb.append(",A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__="
					+ A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__);
			sb.append(
					",Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__="
							+ Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__);
			sb.append(
					",Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__="
							+ Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__);
			sb.append(
					",Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__="
							+ Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__);
			sb.append(
					",Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__="
							+ Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__);
			sb.append(
					",Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__="
							+ Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__);
			sb.append(
					",Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___="
							+ Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___);
			sb.append(
					",Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__="
							+ Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__);
			sb.append(
					",Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__="
							+ Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__);
			sb.append(",Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__="
					+ Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__);
			sb.append(
					",Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__="
							+ Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__);
			sb.append(
					",Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__="
							+ Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.theme, other.theme);
			if (returnValue != 0) {
				return returnValue;
			}

			returnValue = checkNullsAndCompare(this.reference, other.reference);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tCassandraInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tCassandraInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;
		String currentVirtualComponent = null;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row1Struct row1 = new row1Struct();

				/**
				 * [tWriteJSONField_1_Out begin ] start
				 */

				ok_Hash.put("tWriteJSONField_1_Out", false);
				start_Hash.put("tWriteJSONField_1_Out", System.currentTimeMillis());

				currentVirtualComponent = "tWriteJSONField_1";

				currentComponent = "tWriteJSONField_1_Out";

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null) {

						if (execStat) {
							runStat.updateStatOnConnection("row1" + iterateId, 0, 0);
						}

					}
				}

				int tos_count_tWriteJSONField_1_Out = 0;

//tWriteXMLFieldOut_begin
				int nb_line_tWriteJSONField_1_Out = 0;
				boolean needRoot_tWriteJSONField_1_Out = true;

				String strCompCache_tWriteJSONField_1_Out = null;

				java.util.Queue<row2Struct> listGroupby_tWriteJSONField_1_Out = new java.util.concurrent.ConcurrentLinkedQueue<row2Struct>();

				class ThreadXMLField_tWriteJSONField_1_Out extends Thread {

					java.util.Queue<row2Struct> queue;

					java.util.List<java.util.Map<String, String>> flows;
					java.lang.Exception lastException;
					String currentComponent;

					ThreadXMLField_tWriteJSONField_1_Out(java.util.Queue q) {
						this.queue = q;
						globalMap.put("queue_tWriteJSONField_1_In", queue);
						lastException = null;
					}

					ThreadXMLField_tWriteJSONField_1_Out(java.util.Queue q,
							java.util.List<java.util.Map<String, String>> l) {
						this.queue = q;
						this.flows = l;
						lastException = null;
						globalMap.put("queue_tWriteJSONField_1_In", queue);
						globalMap.put("flows_tWriteJSONField_1_In", flows);
					}

					public java.lang.Exception getLastException() {
						return this.lastException;
					}

					public String getCurrentComponent() {
						return this.currentComponent;
					}

					@Override
					public void run() {
						try {
							tWriteJSONField_1_InProcess(globalMap);
						} catch (TalendException te) {
							this.lastException = te.getException();
							this.currentComponent = te.getCurrentComponent();
						}
					}
				}

				ThreadXMLField_tWriteJSONField_1_Out txf_tWriteJSONField_1_Out = new ThreadXMLField_tWriteJSONField_1_Out(
						listGroupby_tWriteJSONField_1_Out);

				txf_tWriteJSONField_1_Out.start();

				java.util.List<java.util.List<String>> groupbyList_tWriteJSONField_1_Out = new java.util.ArrayList<java.util.List<String>>();
				java.util.Map<String, String> valueMap_tWriteJSONField_1_Out = new java.util.HashMap<String, String>();
				java.util.Map<String, String> arraysValueMap_tWriteJSONField_1_Out = new java.util.HashMap<String, String>();

				class NestXMLTool_tWriteJSONField_1_Out {
					public void parseAndAdd(org.dom4j.Element nestRoot, String value) {
						try {
							org.dom4j.Document doc4Str = org.dom4j.DocumentHelper
									.parseText("<root>" + value + "</root>");
							nestRoot.setContent(doc4Str.getRootElement().content());
						} catch (java.lang.Exception e) {
							e.printStackTrace();
							nestRoot.setText(value);
						}
					}

					public void setText(org.dom4j.Element element, String value) {
						if (value.startsWith("<![CDATA[") && value.endsWith("]]>")) {
							String text = value.substring(9, value.length() - 3);
							element.addCDATA(text);
						} else {
							element.setText(value);
						}
					}

					public void replaceDefaultNameSpace(org.dom4j.Element nestRoot) {
						if (nestRoot != null) {
							for (org.dom4j.Element tmp : (java.util.List<org.dom4j.Element>) nestRoot.elements()) {
								if (("").equals(tmp.getQName().getNamespace().getURI())
										&& ("").equals(tmp.getQName().getNamespace().getPrefix())) {
									tmp.setQName(org.dom4j.DocumentHelper.createQName(tmp.getName(),
											nestRoot.getQName().getNamespace()));
								}
								replaceDefaultNameSpace(tmp);
							}
						}
					}

					public void removeEmptyElement(org.dom4j.Element root) {
						if (root != null) {
							for (org.dom4j.Element tmp : (java.util.List<org.dom4j.Element>) root.elements()) {
								removeEmptyElement(tmp);
							}
							if (root.content().size() == 0 && root.attributes().size() == 0
									&& root.declaredNamespaces().size() == 0) {
								if (root.getParent() != null) {
									root.getParent().remove(root);
								}
							}
						}
					}

					public String objectToString(Object value) {
						if (value.getClass().isArray()) {
							StringBuilder sb = new StringBuilder();

							int length = java.lang.reflect.Array.getLength(value);
							for (int i = 0; i < length; i++) {
								Object obj = java.lang.reflect.Array.get(value, i);
								sb.append("<element>");
								sb.append(obj);
								sb.append("</element>");
							}
							return sb.toString();
						} else {
							return value.toString();
						}
					}
				}
				NestXMLTool_tWriteJSONField_1_Out nestXMLTool_tWriteJSONField_1_Out = new NestXMLTool_tWriteJSONField_1_Out();

				row1Struct rowStructOutput_tWriteJSONField_1_Out = new row1Struct();
// sort group root element for judgement of group
				java.util.List<org.dom4j.Element> groupElementList_tWriteJSONField_1_Out = new java.util.ArrayList<org.dom4j.Element>();
				org.dom4j.Element root4Group_tWriteJSONField_1_Out = null;
				org.dom4j.Document doc_tWriteJSONField_1_Out = org.dom4j.DocumentHelper.createDocument();
				org.dom4j.io.OutputFormat format_tWriteJSONField_1_Out = org.dom4j.io.OutputFormat
						.createCompactFormat();
				format_tWriteJSONField_1_Out.setNewLineAfterDeclaration(false);
				format_tWriteJSONField_1_Out.setTrimText(false);
				format_tWriteJSONField_1_Out.setEncoding("ISO-8859-15");
				int[] orders_tWriteJSONField_1_Out = new int[1];

				/**
				 * [tWriteJSONField_1_Out begin ] stop
				 */

				/**
				 * [tCassandraInput_1 begin ] start
				 */

				ok_Hash.put("tCassandraInput_1", false);
				start_Hash.put("tCassandraInput_1", System.currentTimeMillis());

				currentComponent = "tCassandraInput_1";

				int tos_count_tCassandraInput_1 = 0;

				com.datastax.driver.core.Cluster cluster_tCassandraInput_1 = (com.datastax.driver.core.Cluster) globalMap
						.get("cluster_tCassandraConnection_1");
				com.datastax.driver.core.Session connection_tCassandraInput_1 = (com.datastax.driver.core.Session) globalMap
						.get("connection_tCassandraConnection_1");

				com.datastax.driver.core.ResultSet rs_tCassandraInput_1 = connection_tCassandraInput_1
						.execute("select * from " + context.keyspace + "." + context.column_family);
				int nb_line_tCassandraInput_1 = 0;
				for (com.datastax.driver.core.Row row_tCassandraInput_1 : rs_tCassandraInput_1) {
					if (row_tCassandraInput_1.isNull("\"theme\"")) {
						row1.theme = null;
					} else {

						row1.theme = row_tCassandraInput_1.getString("\"theme\"");

					}

					if (row_tCassandraInput_1.isNull("\"id\"")) {
						row1.id = null;
					} else {

						row1.id = row_tCassandraInput_1.getString("\"id\"");

					}

					if (row_tCassandraInput_1.isNull("\"reference\"")) {
						row1.reference = null;
					} else {

						row1.reference = row_tCassandraInput_1.getString("\"reference\"");

					}

					if (row_tCassandraInput_1.isNull("\"title\"")) {
						row1.title = null;
					} else {

						row1.title = row_tCassandraInput_1.getString("\"title\"");

					}

					if (row_tCassandraInput_1.isNull("\"createdAt\"")) {
						row1.createdAt = null;
					} else {

						row1.createdAt = row_tCassandraInput_1.getTimestamp("\"createdAt\"");

					}

					if (row_tCassandraInput_1.isNull("\"publishedAt\"")) {
						row1.publishedAt = null;
					} else {

						row1.publishedAt = row_tCassandraInput_1.getTimestamp("\"publishedAt\"");

					}

					if (row_tCassandraInput_1.isNull("\"updatedAt\"")) {
						row1.updatedAt = null;
					} else {

						row1.updatedAt = row_tCassandraInput_1.getTimestamp("\"updatedAt\"");

					}

					if (row_tCassandraInput_1.isNull("\"trashed\"")) {
						row1.trashed = null;
					} else {

						row1.trashed = row_tCassandraInput_1.getString("\"trashed\"");

					}

					if (row_tCassandraInput_1.isNull("\"trashedStatus\"")) {
						row1.trashedStatus = null;
					} else {

						row1.trashedStatus = row_tCassandraInput_1.getString("\"trashedStatus\"");

					}

					if (row_tCassandraInput_1.isNull("\"authorId\"")) {
						row1.authorId = null;
					} else {

						row1.authorId = row_tCassandraInput_1.getString("\"authorId\"");

					}

					if (row_tCassandraInput_1.isNull("\"authorType\"")) {
						row1.authorType = null;
					} else {

						row1.authorType = row_tCassandraInput_1.getString("\"authorType\"");

					}

					if (row_tCassandraInput_1.isNull("\"authorZipCode\"")) {
						row1.authorZipCode = null;
					} else {

						row1.authorZipCode = row_tCassandraInput_1.getString("\"authorZipCode\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__\"")) {
						row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ = null;
					} else {

						row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ = row_tCassandraInput_1
								.getString(
										"\"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__\"")) {
						row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ = null;
					} else {

						row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ = row_tCassandraInput_1
								.getString(
										"\"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__\"")) {
						row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ = null;
					} else {

						row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ = row_tCassandraInput_1
								.getString(
										"\"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__\"")) {
						row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ = null;
					} else {

						row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ = row_tCassandraInput_1
								.getString(
										"\"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__\"")) {
						row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ = null;
					} else {

						row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ = row_tCassandraInput_1
								.getString(
										"\"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__\"")) {
						row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ = null;
					} else {

						row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ = row_tCassandraInput_1
								.getString(
										"\"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__\"")) {
						row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ = null;
					} else {

						row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ = row_tCassandraInput_1
								.getString(
										"\"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__\"")) {
						row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ = null;
					} else {

						row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ = row_tCassandraInput_1
								.getString(
										"\"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__\"")) {
						row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ = null;
					} else {

						row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ = row_tCassandraInput_1
								.getString(
										"\"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__\"")) {
						row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ = null;
					} else {

						row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ = row_tCassandraInput_1
								.getString(
										"\"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___\"")) {
						row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ = null;
					} else {

						row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ = row_tCassandraInput_1
								.getString(
										"\"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__\"")) {
						row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ = null;
					} else {

						row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ = row_tCassandraInput_1
								.getString(
										"\"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__\"")) {
						row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ = null;
					} else {

						row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ = row_tCassandraInput_1
								.getString(
										"\"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__\"")) {
						row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ = null;
					} else {

						row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ = row_tCassandraInput_1
								.getString(
										"\"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__\"")) {
						row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ = null;
					} else {

						row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ = row_tCassandraInput_1
								.getString(
										"\"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__\"");

					}

					if (row_tCassandraInput_1.isNull(
							"\"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__\"")) {
						row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ = null;
					} else {

						row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ = row_tCassandraInput_1
								.getString(
										"\"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__\"");

					}

					nb_line_tCassandraInput_1++;

					/**
					 * [tCassandraInput_1 begin ] stop
					 */

					/**
					 * [tCassandraInput_1 main ] start
					 */

					currentComponent = "tCassandraInput_1";

					tos_count_tCassandraInput_1++;

					/**
					 * [tCassandraInput_1 main ] stop
					 */

					/**
					 * [tCassandraInput_1 process_data_begin ] start
					 */

					currentComponent = "tCassandraInput_1";

					/**
					 * [tCassandraInput_1 process_data_begin ] stop
					 */

					/**
					 * [tWriteJSONField_1_Out main ] start
					 */

					currentVirtualComponent = "tWriteJSONField_1";

					currentComponent = "tWriteJSONField_1_Out";

					// row1
					// row1

					if (execStat) {
						runStat.updateStatOnConnection("row1" + iterateId, 1, 1);
					}

					if (txf_tWriteJSONField_1_Out.getLastException() != null) {
						currentComponent = txf_tWriteJSONField_1_Out.getCurrentComponent();
						throw txf_tWriteJSONField_1_Out.getLastException();
					}
					nb_line_tWriteJSONField_1_Out++;
					valueMap_tWriteJSONField_1_Out.clear();
					arraysValueMap_tWriteJSONField_1_Out.clear();
					valueMap_tWriteJSONField_1_Out.put("theme", (row1.theme != null ? row1.theme.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("theme",
							(row1.theme != null ? row1.theme.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("id", (row1.id != null ? row1.id.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("id", (row1.id != null ? row1.id.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("reference",
							(row1.reference != null ? row1.reference.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("reference",
							(row1.reference != null ? row1.reference.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("title", (row1.title != null ? row1.title.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("title",
							(row1.title != null ? row1.title.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("createdAt",
							(row1.createdAt != null ? FormatterUtils.format_Date(row1.createdAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put("createdAt",
							(row1.createdAt != null ? FormatterUtils.format_Date(row1.createdAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					valueMap_tWriteJSONField_1_Out.put("publishedAt",
							(row1.publishedAt != null
									? FormatterUtils.format_Date(row1.publishedAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put("publishedAt",
							(row1.publishedAt != null
									? FormatterUtils.format_Date(row1.publishedAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					valueMap_tWriteJSONField_1_Out.put("updatedAt",
							(row1.updatedAt != null ? FormatterUtils.format_Date(row1.updatedAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put("updatedAt",
							(row1.updatedAt != null ? FormatterUtils.format_Date(row1.updatedAt, "yyyy-MM-dd HH:mm:ss")
									: null));
					valueMap_tWriteJSONField_1_Out.put("trashed",
							(row1.trashed != null ? row1.trashed.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("trashed",
							(row1.trashed != null ? row1.trashed.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("trashedStatus",
							(row1.trashedStatus != null ? row1.trashedStatus.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("trashedStatus",
							(row1.trashedStatus != null ? row1.trashedStatus.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("authorId",
							(row1.authorId != null ? row1.authorId.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("authorId",
							(row1.authorId != null ? row1.authorId.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("authorType",
							(row1.authorType != null ? row1.authorType.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("authorType",
							(row1.authorType != null ? row1.authorType.toString() : null));
					valueMap_tWriteJSONField_1_Out.put("authorZipCode",
							(row1.authorZipCode != null ? row1.authorZipCode.toString() : null));
					arraysValueMap_tWriteJSONField_1_Out.put("authorZipCode",
							(row1.authorZipCode != null ? row1.authorZipCode.toString() : null));
					valueMap_tWriteJSONField_1_Out.put(
							"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__",
							(row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ != null
									? row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__",
							(row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__ != null
									? row1.Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__",
							(row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ != null
									? row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__",
							(row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__ != null
									? row1.Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__",
							(row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ != null
									? row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__",
							(row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__ != null
									? row1.Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__",
							(row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ != null
									? row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__",
							(row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__ != null
									? row1.Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__",
							(row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ != null
									? row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__",
							(row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__ != null
									? row1.A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__",
							(row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ != null
									? row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__",
							(row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__ != null
									? row1.Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__",
							(row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ != null
									? row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__",
							(row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__ != null
									? row1.Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__",
							(row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ != null
									? row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__",
							(row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__ != null
									? row1.Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__",
							(row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ != null
									? row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__",
							(row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__ != null
									? row1.Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__",
							(row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ != null
									? row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__",
							(row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__ != null
									? row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___",
							(row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ != null
									? row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___",
							(row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___ != null
									? row1.Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__",
							(row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ != null
									? row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__",
							(row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__ != null
									? row1.Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__",
							(row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ != null
									? row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__",
							(row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__ != null
									? row1.Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__",
							(row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ != null
									? row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__",
							(row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__ != null
									? row1.Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__",
							(row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ != null
									? row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__",
							(row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__ != null
									? row1.Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__
											.toString()
									: null));
					valueMap_tWriteJSONField_1_Out.put(
							"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__",
							(row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ != null
									? row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__
											.toString()
									: null));
					arraysValueMap_tWriteJSONField_1_Out.put(
							"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__",
							(row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__ != null
									? row1.Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__
											.toString()
									: null));
					String strTemp_tWriteJSONField_1_Out = "";
					if (strCompCache_tWriteJSONField_1_Out == null) {
						strCompCache_tWriteJSONField_1_Out = strTemp_tWriteJSONField_1_Out;

					} else {
						nestXMLTool_tWriteJSONField_1_Out
								.replaceDefaultNameSpace(doc_tWriteJSONField_1_Out.getRootElement());
						java.io.StringWriter strWriter_tWriteJSONField_1_Out = new java.io.StringWriter();
						org.dom4j.io.XMLWriter output_tWriteJSONField_1_Out = new org.dom4j.io.XMLWriter(
								strWriter_tWriteJSONField_1_Out, format_tWriteJSONField_1_Out);
						output_tWriteJSONField_1_Out.write(doc_tWriteJSONField_1_Out);
						output_tWriteJSONField_1_Out.close();

						row2Struct row_tWriteJSONField_1_Out = new row2Struct();

						row_tWriteJSONField_1_Out.value = strWriter_tWriteJSONField_1_Out.toString();
						listGroupby_tWriteJSONField_1_Out.add(row_tWriteJSONField_1_Out);

						doc_tWriteJSONField_1_Out.clearContent();
						needRoot_tWriteJSONField_1_Out = true;
						for (int i_tWriteJSONField_1_Out = 0; i_tWriteJSONField_1_Out < orders_tWriteJSONField_1_Out.length; i_tWriteJSONField_1_Out++) {
							orders_tWriteJSONField_1_Out[i_tWriteJSONField_1_Out] = 0;
						}

						if (groupbyList_tWriteJSONField_1_Out != null
								&& groupbyList_tWriteJSONField_1_Out.size() >= 0) {
							groupbyList_tWriteJSONField_1_Out.clear();
						}
						strCompCache_tWriteJSONField_1_Out = strTemp_tWriteJSONField_1_Out;
					}

					org.dom4j.Element subTreeRootParent_tWriteJSONField_1_Out = null;

					// build root xml tree
					if (needRoot_tWriteJSONField_1_Out) {
						needRoot_tWriteJSONField_1_Out = false;
						org.dom4j.Element root_tWriteJSONField_1_Out = doc_tWriteJSONField_1_Out.addElement("rootTag");
						subTreeRootParent_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out;
						org.dom4j.Element root_0_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement("title");
						if (valueMap_tWriteJSONField_1_Out.get("title") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_0_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("title"));
						}
						org.dom4j.Element root_1_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("createdAt");
						if (valueMap_tWriteJSONField_1_Out.get("createdAt") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_1_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("createdAt"));
						}
						org.dom4j.Element root_2_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("publishedAt");
						if (valueMap_tWriteJSONField_1_Out.get("publishedAt") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_2_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("publishedAt"));
						}
						org.dom4j.Element root_3_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("updatedAt");
						if (valueMap_tWriteJSONField_1_Out.get("updatedAt") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_3_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("updatedAt"));
						}
						org.dom4j.Element root_4_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("trashed");
						if (valueMap_tWriteJSONField_1_Out.get("trashed") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_4_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("trashed"));
						}
						org.dom4j.Element root_5_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("trashedStatus");
						if (valueMap_tWriteJSONField_1_Out.get("trashedStatus") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_5_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("trashedStatus"));
						}
						org.dom4j.Element root_6_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("authorId");
						if (valueMap_tWriteJSONField_1_Out.get("authorId") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_6_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("authorId"));
						}
						org.dom4j.Element root_7_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("authorType");
						if (valueMap_tWriteJSONField_1_Out.get("authorType") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_7_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("authorType"));
						}
						org.dom4j.Element root_8_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out
								.addElement("authorZipCode");
						if (valueMap_tWriteJSONField_1_Out.get("authorZipCode") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_8_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get("authorZipCode"));
						}
						org.dom4j.Element root_9_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_9_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Quel_est_aujourd_hui_pour_vous_le_probleme_concret_le_plus_important_dans_le_domaine_de_l_environnement__"));
						}
						org.dom4j.Element root_10_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_10_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Que_faudrait_il_faire_selon_vous_pour_apporter_des_reponses_a_ce_probleme__"));
						}
						org.dom4j.Element root_11_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_11_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Diriez_vous_que_votre_vie_quotidienne_est_aujourd_hui_touchee_par_le_changement_climatique__"));
						}
						org.dom4j.Element root_12_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_12_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Si_oui__de_quelle_maniere_votre_vie_quotidienne_est_elle_touchee_par_le_changement_climatique__"));
						}
						org.dom4j.Element root_13_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_13_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"A_titre_personnel__pensez_vous_pouvoir_contribuer_a_proteger_l_environnement__"));
						}
						org.dom4j.Element root_14_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_14_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Si_oui__que_faites_vous_aujourd_hui_pour_proteger_l_environnement_et_ou_que_pourriez_vous_faire__"));
						}
						org.dom4j.Element root_15_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_15_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Qu_est_ce_qui_pourrait_vous_inciter_a_changer_vos_comportements_comme_par_exemple_mieux_entretenir_et_regler_votre_chauffage__modifier_votre_maniere_de_conduire_ou_renoncer_a_prendre_votre_vehicule_pour_de_tres_petites_distances__"));
						}
						org.dom4j.Element root_16_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_16_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Quelles_seraient_pour_vous_les_solutions_les_plus_simples_et_les_plus_supportables_sur_un_plan_financier_pour_vous_inciter_a_changer_vos_comportements__"));
						}
						org.dom4j.Element root_17_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_17_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Par_rapport_a_votre_mode_de_chauffage_actuel__pensez_vous_qu_il_existe_des_solutions_alternatives_plus_ecologiques__"));
						}
						org.dom4j.Element root_18_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_18_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_changer_de_mode_de_chauffage__"));
						}
						org.dom4j.Element root_19_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_19_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Avez_vous_pour_vos_deplacements_quotidiens_la_possibilite_de_recourir_a_des_solutions_de_mobilite_alternatives_a_la_voiture_individuelle_comme_les_transports_en_commun__le_covoiturage__l_auto_partage__le_transport_a_la_demande__le_velo__etc___"));
						}
						org.dom4j.Element root_20_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_20_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Si_oui__que_faudrait_il_faire_pour_vous_convaincre_ou_vous_aider_a_utiliser_ces_solutions_alternatives__"));
						}
						org.dom4j.Element root_21_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_21_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Si_non__quelles_sont_les_solutions_de_mobilite_alternatives_que_vous_souhaiteriez_pouvoir_utiliser__"));
						}
						org.dom4j.Element root_22_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_22_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Et_qui_doit_selon_vous_se_charger_de_vous_proposer_ce_type_de_solutions_alternatives__"));
						}
						org.dom4j.Element root_23_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_23_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Que_pourrait_faire_la_France_pour_faire_partager_ses_choix_en_matiere_d_environnement_au_niveau_europeen_et_international__"));
						}
						org.dom4j.Element root_24_tWriteJSONField_1_Out = root_tWriteJSONField_1_Out.addElement(
								"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__");
						if (valueMap_tWriteJSONField_1_Out.get(
								"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__") != null) {
							nestXMLTool_tWriteJSONField_1_Out.setText(root_24_tWriteJSONField_1_Out,
									valueMap_tWriteJSONField_1_Out.get(
											"Y_a_t_il_d_autres_points_sur_la_transition_ecologique_sur_lesquels_vous_souhaiteriez_vous_exprimer__"));
						}
						root4Group_tWriteJSONField_1_Out = subTreeRootParent_tWriteJSONField_1_Out;
					} else {
						subTreeRootParent_tWriteJSONField_1_Out = root4Group_tWriteJSONField_1_Out;
					}
					// build group xml tree
					// build loop xml tree
					org.dom4j.Element loop_tWriteJSONField_1_Out = org.dom4j.DocumentHelper.createElement("reference");
					if (orders_tWriteJSONField_1_Out[0] == 0) {
						orders_tWriteJSONField_1_Out[0] = 0;
					}
					if (1 < orders_tWriteJSONField_1_Out.length) {
						orders_tWriteJSONField_1_Out[1] = 0;
					}
					subTreeRootParent_tWriteJSONField_1_Out.elements().add(orders_tWriteJSONField_1_Out[0]++,
							loop_tWriteJSONField_1_Out);
					if (valueMap_tWriteJSONField_1_Out.get("reference") != null) {
						nestXMLTool_tWriteJSONField_1_Out.setText(loop_tWriteJSONField_1_Out,
								valueMap_tWriteJSONField_1_Out.get("reference"));
					}

					tos_count_tWriteJSONField_1_Out++;

					/**
					 * [tWriteJSONField_1_Out main ] stop
					 */

					/**
					 * [tWriteJSONField_1_Out process_data_begin ] start
					 */

					currentVirtualComponent = "tWriteJSONField_1";

					currentComponent = "tWriteJSONField_1_Out";

					/**
					 * [tWriteJSONField_1_Out process_data_begin ] stop
					 */

					/**
					 * [tWriteJSONField_1_Out process_data_end ] start
					 */

					currentVirtualComponent = "tWriteJSONField_1";

					currentComponent = "tWriteJSONField_1_Out";

					/**
					 * [tWriteJSONField_1_Out process_data_end ] stop
					 */

					/**
					 * [tCassandraInput_1 process_data_end ] start
					 */

					currentComponent = "tCassandraInput_1";

					/**
					 * [tCassandraInput_1 process_data_end ] stop
					 */

					/**
					 * [tCassandraInput_1 end ] start
					 */

					currentComponent = "tCassandraInput_1";

				}
				globalMap.put("tCassandraInput_1_NB_LINE", nb_line_tCassandraInput_1);

				ok_Hash.put("tCassandraInput_1", true);
				end_Hash.put("tCassandraInput_1", System.currentTimeMillis());

				/**
				 * [tCassandraInput_1 end ] stop
				 */

				/**
				 * [tWriteJSONField_1_Out end ] start
				 */

				currentVirtualComponent = "tWriteJSONField_1";

				currentComponent = "tWriteJSONField_1_Out";

				if (nb_line_tWriteJSONField_1_Out > 0) {
					nestXMLTool_tWriteJSONField_1_Out
							.replaceDefaultNameSpace(doc_tWriteJSONField_1_Out.getRootElement());
					java.io.StringWriter strWriter_tWriteJSONField_1_Out = new java.io.StringWriter();
					org.dom4j.io.XMLWriter output_tWriteJSONField_1_Out = new org.dom4j.io.XMLWriter(
							strWriter_tWriteJSONField_1_Out, format_tWriteJSONField_1_Out);
					output_tWriteJSONField_1_Out.write(doc_tWriteJSONField_1_Out);
					output_tWriteJSONField_1_Out.close();
					row2Struct row_tWriteJSONField_1_Out = new row2Struct();

					row_tWriteJSONField_1_Out.value = strWriter_tWriteJSONField_1_Out.toString();
					listGroupby_tWriteJSONField_1_Out.add(row_tWriteJSONField_1_Out);

				}
				globalMap.put("tWriteJSONField_1_Out_NB_LINE", nb_line_tWriteJSONField_1_Out);
				globalMap.put("tWriteJSONField_1_In_FINISH" + (listGroupby_tWriteJSONField_1_Out == null ? ""
						: listGroupby_tWriteJSONField_1_Out.hashCode()), "true");

				txf_tWriteJSONField_1_Out.join();
				if (txf_tWriteJSONField_1_Out.getLastException() != null) {
					currentComponent = txf_tWriteJSONField_1_Out.getCurrentComponent();
					throw txf_tWriteJSONField_1_Out.getLastException();
				}

				resourceMap.put("finish_tWriteJSONField_1_Out", true);

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null || !((Boolean) resourceMap.get("inIterateVComp"))) {
						runStat.updateStatOnConnection("row1" + iterateId, 2, 0);
					}
				}

				ok_Hash.put("tWriteJSONField_1_Out", true);
				end_Hash.put("tWriteJSONField_1_Out", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk", 0, "ok");
				}

				/**
				 * [tWriteJSONField_1_Out end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			te.setVirtualComponentName(currentVirtualComponent);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tCassandraInput_1 finally ] start
				 */

				currentComponent = "tCassandraInput_1";

				/**
				 * [tCassandraInput_1 finally ] stop
				 */

				/**
				 * [tWriteJSONField_1_Out finally ] start
				 */

				currentVirtualComponent = "tWriteJSONField_1";

				currentComponent = "tWriteJSONField_1_Out";

				java.util.Queue listGroupby_tWriteJSONField_1_Out = (java.util.Queue) globalMap
						.get("queue_tWriteJSONField_1_In");
				if (resourceMap.get("finish_tWriteJSONField_1_Out") == null) {
					globalMap.put("tWriteJSONField_1_In_FINISH_WITH_EXCEPTION"
							+ (listGroupby_tWriteJSONField_1_Out == null ? ""
									: listGroupby_tWriteJSONField_1_Out.hashCode()),
							"true");
				}

				if (listGroupby_tWriteJSONField_1_Out != null) {
					globalMap.put("tWriteJSONField_1_In_FINISH" + (listGroupby_tWriteJSONField_1_Out == null ? ""
							: listGroupby_tWriteJSONField_1_Out.hashCode()), "true");
				}

				/**
				 * [tWriteJSONField_1_Out finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tCassandraInput_1_SUBPROCESS_STATE", 1);
	}

	public void tPostjob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tPostjob_1 begin ] start
				 */

				ok_Hash.put("tPostjob_1", false);
				start_Hash.put("tPostjob_1", System.currentTimeMillis());

				currentComponent = "tPostjob_1";

				int tos_count_tPostjob_1 = 0;

				/**
				 * [tPostjob_1 begin ] stop
				 */

				/**
				 * [tPostjob_1 main ] start
				 */

				currentComponent = "tPostjob_1";

				tos_count_tPostjob_1++;

				/**
				 * [tPostjob_1 main ] stop
				 */

				/**
				 * [tPostjob_1 process_data_begin ] start
				 */

				currentComponent = "tPostjob_1";

				/**
				 * [tPostjob_1 process_data_begin ] stop
				 */

				/**
				 * [tPostjob_1 process_data_end ] start
				 */

				currentComponent = "tPostjob_1";

				/**
				 * [tPostjob_1 process_data_end ] stop
				 */

				/**
				 * [tPostjob_1 end ] start
				 */

				currentComponent = "tPostjob_1";

				ok_Hash.put("tPostjob_1", true);
				end_Hash.put("tPostjob_1", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk3", 0, "ok");
				}
				tCassandraClose_1Process(globalMap);

				/**
				 * [tPostjob_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tPostjob_1 finally ] start
				 */

				currentComponent = "tPostjob_1";

				/**
				 * [tPostjob_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tPostjob_1_SUBPROCESS_STATE", 1);
	}

	public void tCassandraClose_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tCassandraClose_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tCassandraClose_1 begin ] start
				 */

				ok_Hash.put("tCassandraClose_1", false);
				start_Hash.put("tCassandraClose_1", System.currentTimeMillis());

				currentComponent = "tCassandraClose_1";

				int tos_count_tCassandraClose_1 = 0;

				/**
				 * [tCassandraClose_1 begin ] stop
				 */

				/**
				 * [tCassandraClose_1 main ] start
				 */

				currentComponent = "tCassandraClose_1";

				com.datastax.driver.core.Cluster cluster_tCassandraClose_1 = (com.datastax.driver.core.Cluster) globalMap
						.get("cluster_tCassandraConnection_1");
				com.datastax.driver.core.Session connection_tCassandraClose_1 = (com.datastax.driver.core.Session) globalMap
						.get("connection_tCassandraConnection_1");
				if (connection_tCassandraClose_1 != null) {
					connection_tCassandraClose_1.close();
				}
				if (cluster_tCassandraClose_1 != null) {
					cluster_tCassandraClose_1.close();
				}

				tos_count_tCassandraClose_1++;

				/**
				 * [tCassandraClose_1 main ] stop
				 */

				/**
				 * [tCassandraClose_1 process_data_begin ] start
				 */

				currentComponent = "tCassandraClose_1";

				/**
				 * [tCassandraClose_1 process_data_begin ] stop
				 */

				/**
				 * [tCassandraClose_1 process_data_end ] start
				 */

				currentComponent = "tCassandraClose_1";

				/**
				 * [tCassandraClose_1 process_data_end ] stop
				 */

				/**
				 * [tCassandraClose_1 end ] start
				 */

				currentComponent = "tCassandraClose_1";

				ok_Hash.put("tCassandraClose_1", true);
				end_Hash.put("tCassandraClose_1", System.currentTimeMillis());

				/**
				 * [tCassandraClose_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tCassandraClose_1 finally ] start
				 */

				currentComponent = "tCassandraClose_1";

				/**
				 * [tCassandraClose_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tCassandraClose_1_SUBPROCESS_STATE", 1);
	}

	public void tPrejob_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tPrejob_1 begin ] start
				 */

				ok_Hash.put("tPrejob_1", false);
				start_Hash.put("tPrejob_1", System.currentTimeMillis());

				currentComponent = "tPrejob_1";

				int tos_count_tPrejob_1 = 0;

				/**
				 * [tPrejob_1 begin ] stop
				 */

				/**
				 * [tPrejob_1 main ] start
				 */

				currentComponent = "tPrejob_1";

				tos_count_tPrejob_1++;

				/**
				 * [tPrejob_1 main ] stop
				 */

				/**
				 * [tPrejob_1 process_data_begin ] start
				 */

				currentComponent = "tPrejob_1";

				/**
				 * [tPrejob_1 process_data_begin ] stop
				 */

				/**
				 * [tPrejob_1 process_data_end ] start
				 */

				currentComponent = "tPrejob_1";

				/**
				 * [tPrejob_1 process_data_end ] stop
				 */

				/**
				 * [tPrejob_1 end ] start
				 */

				currentComponent = "tPrejob_1";

				ok_Hash.put("tPrejob_1", true);
				end_Hash.put("tPrejob_1", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk1", 0, "ok");
				}
				tKafkaConnection_1Process(globalMap);

				/**
				 * [tPrejob_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tPrejob_1 finally ] start
				 */

				currentComponent = "tPrejob_1";

				/**
				 * [tPrejob_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tPrejob_1_SUBPROCESS_STATE", 1);
	}

	public void tKafkaConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tKafkaConnection_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tKafkaConnection_1 begin ] start
				 */

				ok_Hash.put("tKafkaConnection_1", false);
				start_Hash.put("tKafkaConnection_1", System.currentTimeMillis());

				currentComponent = "tKafkaConnection_1";

				int tos_count_tKafkaConnection_1 = 0;

				/**
				 * [tKafkaConnection_1 begin ] stop
				 */

				/**
				 * [tKafkaConnection_1 main ] start
				 */

				currentComponent = "tKafkaConnection_1";

				tos_count_tKafkaConnection_1++;

				/**
				 * [tKafkaConnection_1 main ] stop
				 */

				/**
				 * [tKafkaConnection_1 process_data_begin ] start
				 */

				currentComponent = "tKafkaConnection_1";

				/**
				 * [tKafkaConnection_1 process_data_begin ] stop
				 */

				/**
				 * [tKafkaConnection_1 process_data_end ] start
				 */

				currentComponent = "tKafkaConnection_1";

				/**
				 * [tKafkaConnection_1 process_data_end ] stop
				 */

				/**
				 * [tKafkaConnection_1 end ] start
				 */

				currentComponent = "tKafkaConnection_1";

				ok_Hash.put("tKafkaConnection_1", true);
				end_Hash.put("tKafkaConnection_1", System.currentTimeMillis());

				if (execStat) {
					runStat.updateStatOnConnection("OnComponentOk2", 0, "ok");
				}
				tCassandraConnection_1Process(globalMap);

				/**
				 * [tKafkaConnection_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tKafkaConnection_1 finally ] start
				 */

				currentComponent = "tKafkaConnection_1";

				/**
				 * [tKafkaConnection_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tKafkaConnection_1_SUBPROCESS_STATE", 1);
	}

	public void tCassandraConnection_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tCassandraConnection_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				/**
				 * [tCassandraConnection_1 begin ] start
				 */

				ok_Hash.put("tCassandraConnection_1", false);
				start_Hash.put("tCassandraConnection_1", System.currentTimeMillis());

				currentComponent = "tCassandraConnection_1";

				int tos_count_tCassandraConnection_1 = 0;

				/**
				 * [tCassandraConnection_1 begin ] stop
				 */

				/**
				 * [tCassandraConnection_1 main ] start
				 */

				currentComponent = "tCassandraConnection_1";

				com.datastax.driver.core.Cluster cluster_tCassandraConnection_1 = com.datastax.driver.core.Cluster
						.builder().addContactPoints(context.cassandra_host.split(","))
						.withPort(Integer.valueOf(context.cassandra_port))

						.build();

				com.datastax.driver.core.Session connection_tCassandraConnection_1 = null;
				connection_tCassandraConnection_1 = cluster_tCassandraConnection_1.connect();
				globalMap.put("cluster_tCassandraConnection_1", cluster_tCassandraConnection_1);
				globalMap.put("connection_tCassandraConnection_1", connection_tCassandraConnection_1);

				tos_count_tCassandraConnection_1++;

				/**
				 * [tCassandraConnection_1 main ] stop
				 */

				/**
				 * [tCassandraConnection_1 process_data_begin ] start
				 */

				currentComponent = "tCassandraConnection_1";

				/**
				 * [tCassandraConnection_1 process_data_begin ] stop
				 */

				/**
				 * [tCassandraConnection_1 process_data_end ] start
				 */

				currentComponent = "tCassandraConnection_1";

				/**
				 * [tCassandraConnection_1 process_data_end ] stop
				 */

				/**
				 * [tCassandraConnection_1 end ] start
				 */

				currentComponent = "tCassandraConnection_1";

				ok_Hash.put("tCassandraConnection_1", true);
				end_Hash.put("tCassandraConnection_1", System.currentTimeMillis());

				/**
				 * [tCassandraConnection_1 end ] stop
				 */
			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tCassandraConnection_1 finally ] start
				 */

				currentComponent = "tCassandraConnection_1";

				/**
				 * [tCassandraConnection_1 finally ] stop
				 */
			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tCassandraConnection_1_SUBPROCESS_STATE", 1);
	}

	public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
		final static byte[] commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka = new byte[0];
		static byte[] commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[0];

		public byte[] serializedValue;

		public byte[] getSerializedValue() {
			return this.serializedValue;
		}

		private byte[] readByteArray(ObjectInputStream dis) throws IOException {
			byte[] byteArrayReturn;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				byteArrayReturn = null;
			} else {
				byte[] byteArray = new byte[length];
				dis.readFully(byteArray);
				byteArrayReturn = byteArray;
			}
			return byteArrayReturn;
		}

		private void writeByteArray(byte[] byteArray, ObjectOutputStream dos) throws IOException {
			if (byteArray == null) {
				dos.writeInt(-1);
			} else {
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka) {

				try {

					int length = 0;

					this.serializedValue = readByteArray(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// byte[]

				writeByteArray(this.serializedValue, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("serializedValue=" + String.valueOf(serializedValue));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
		final static byte[] commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka = new byte[0];
		static byte[] commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[0];

		public String value;

		public String getValue() {
			return this.value;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_DEBAT_NATIONAL_cassandra2kafka.length) {
					if (length < 1024 && commonByteArray_DEBAT_NATIONAL_cassandra2kafka.length == 0) {
						commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[1024];
					} else {
						commonByteArray_DEBAT_NATIONAL_cassandra2kafka = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_DEBAT_NATIONAL_cassandra2kafka, 0, length);
				strReturn = new String(commonByteArray_DEBAT_NATIONAL_cassandra2kafka, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_DEBAT_NATIONAL_cassandra2kafka) {

				try {

					int length = 0;

					this.value = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.value, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("value=" + value);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tWriteJSONField_1_InProcess(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tWriteJSONField_1_In_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;
		String currentVirtualComponent = null;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row2Struct row2 = new row2Struct();
				row3Struct row3 = new row3Struct();

				/**
				 * [tKafkaOutput_1 begin ] start
				 */

				ok_Hash.put("tKafkaOutput_1", false);
				start_Hash.put("tKafkaOutput_1", System.currentTimeMillis());

				currentComponent = "tKafkaOutput_1";

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null) {

						if (execStat) {
							runStat.updateStatOnConnection("row3" + iterateId, 0, 0);
						}

					}
				}

				int tos_count_tKafkaOutput_1 = 0;

// Producer configuration
				java.util.Properties tKafkaOutput_1_kafkaProperties = new java.util.Properties();
				tKafkaOutput_1_kafkaProperties.setProperty("bootstrap.servers", context.kafka_host);
				tKafkaOutput_1_kafkaProperties.setProperty("compression.type", "none");
				tKafkaOutput_1_kafkaProperties.setProperty("security.protocol", "PLAINTEXT");

				org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]> tKafkaOutput_1_kafkaProducer = (org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]>) globalMap
						.get("tKafkaOutput_1_kafkaProducer");
				if (null == tKafkaOutput_1_kafkaProducer) {
					tKafkaOutput_1_kafkaProducer = new org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]>(
							tKafkaOutput_1_kafkaProperties,
							new org.apache.kafka.common.serialization.ByteArraySerializer(),
							new org.apache.kafka.common.serialization.ByteArraySerializer());
					globalMap.put("tKafkaOutput_1_kafkaProducer", tKafkaOutput_1_kafkaProducer);
				}

				final java.util.Set<Exception> tKafkaOutput_1_producerExceptions = java.util.Collections
						.newSetFromMap(new java.util.concurrent.ConcurrentHashMap<Exception, Boolean>());
				final int tKafkaOutput_1_EXCEPTION_CATCH_TIMEOUT = 5;
				int tKafkaOutput_1_counter_send = 0;
				final java.util.concurrent.atomic.AtomicInteger tKafkaOutput_1_counter_rev = new java.util.concurrent.atomic.AtomicInteger();

				/**
				 * [tKafkaOutput_1 begin ] stop
				 */

				/**
				 * [tJavaRow_1 begin ] start
				 */

				ok_Hash.put("tJavaRow_1", false);
				start_Hash.put("tJavaRow_1", System.currentTimeMillis());

				currentComponent = "tJavaRow_1";

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null) {

						if (execStat) {
							runStat.updateStatOnConnection("row2" + iterateId, 0, 0);
						}

					}
				}

				int tos_count_tJavaRow_1 = 0;

				int nb_line_tJavaRow_1 = 0;

				/**
				 * [tJavaRow_1 begin ] stop
				 */

				/**
				 * [tWriteJSONField_1_In begin ] start
				 */

				ok_Hash.put("tWriteJSONField_1_In", false);
				start_Hash.put("tWriteJSONField_1_In", System.currentTimeMillis());

				currentVirtualComponent = "tWriteJSONField_1";

				currentComponent = "tWriteJSONField_1_In";

				int tos_count_tWriteJSONField_1_In = 0;

				int nb_line_tWriteJSONField_1_In = 0;
				net.sf.json.xml.XMLSerializer xmlSerializer_tWriteJSONField_1_In = new net.sf.json.xml.XMLSerializer();
				xmlSerializer_tWriteJSONField_1_In.clearNamespaces();
				xmlSerializer_tWriteJSONField_1_In.setSkipNamespaces(true);
				xmlSerializer_tWriteJSONField_1_In.setForceTopLevelObject(false);

				java.util.Queue<row2Struct> queue_tWriteJSONField_1_In = (java.util.Queue<row2Struct>) globalMap
						.get("queue_tWriteJSONField_1_In");

				String readFinishMarkWithPipeId_tWriteJSONField_1_In = "tWriteJSONField_1_In_FINISH"
						+ (queue_tWriteJSONField_1_In == null ? "" : queue_tWriteJSONField_1_In.hashCode());
				String str_tWriteJSONField_1_In = null;

				while (!globalMap.containsKey(readFinishMarkWithPipeId_tWriteJSONField_1_In)
						|| !queue_tWriteJSONField_1_In.isEmpty()) {
					if (!queue_tWriteJSONField_1_In.isEmpty()) {

						/**
						 * [tWriteJSONField_1_In begin ] stop
						 */

						/**
						 * [tWriteJSONField_1_In main ] start
						 */

						currentVirtualComponent = "tWriteJSONField_1";

						currentComponent = "tWriteJSONField_1_In";

						row2Struct result_tWriteJSONField_1_In = queue_tWriteJSONField_1_In.poll();
						str_tWriteJSONField_1_In = result_tWriteJSONField_1_In.value;
						// Convert XML to JSON
						net.sf.json.JSON json_tWriteJSONField_1_In = xmlSerializer_tWriteJSONField_1_In
								.read(str_tWriteJSONField_1_In);
						row2.value = json_tWriteJSONField_1_In.toString();

						nb_line_tWriteJSONField_1_In++;

						tos_count_tWriteJSONField_1_In++;

						/**
						 * [tWriteJSONField_1_In main ] stop
						 */

						/**
						 * [tWriteJSONField_1_In process_data_begin ] start
						 */

						currentVirtualComponent = "tWriteJSONField_1";

						currentComponent = "tWriteJSONField_1_In";

						/**
						 * [tWriteJSONField_1_In process_data_begin ] stop
						 */

						/**
						 * [tJavaRow_1 main ] start
						 */

						currentComponent = "tJavaRow_1";

						// row2
						// row2

						if (execStat) {
							runStat.updateStatOnConnection("row2" + iterateId, 1, 1);
						}

						// Code generated according to input schema and output schema
						row3.serializedValue = row2.value.replace("[]", "\"\"").getBytes();

						nb_line_tJavaRow_1++;

						tos_count_tJavaRow_1++;

						/**
						 * [tJavaRow_1 main ] stop
						 */

						/**
						 * [tJavaRow_1 process_data_begin ] start
						 */

						currentComponent = "tJavaRow_1";

						/**
						 * [tJavaRow_1 process_data_begin ] stop
						 */

						/**
						 * [tKafkaOutput_1 main ] start
						 */

						currentComponent = "tKafkaOutput_1";

						// row3
						// row3

						if (execStat) {
							runStat.updateStatOnConnection("row3" + iterateId, 1, 1);
						}

						tKafkaOutput_1_kafkaProducer.send(
								new org.apache.kafka.clients.producer.ProducerRecord<byte[], byte[]>(
										context.topic_elasticsearch, row3.serializedValue),
								new org.apache.kafka.clients.producer.Callback() {
									public void onCompletion(org.apache.kafka.clients.producer.RecordMetadata metadata,
											Exception e) {
										if (e != null) {
											tKafkaOutput_1_producerExceptions.add(e);
										}
										tKafkaOutput_1_counter_rev.getAndIncrement();
									}
								});
						tKafkaOutput_1_counter_send++;

						if (!tKafkaOutput_1_producerExceptions.isEmpty()) {
							Exception e = tKafkaOutput_1_producerExceptions.iterator().next();

							if (e instanceof org.apache.kafka.common.errors.AuthenticationException
									|| e instanceof org.apache.kafka.common.errors.AuthorizationException
									|| e instanceof org.apache.kafka.common.errors.UnknownServerException
									|| e instanceof org.apache.kafka.common.errors.UnsupportedVersionException) {
								throw e;
							} else {

							}

						}

						tos_count_tKafkaOutput_1++;

						/**
						 * [tKafkaOutput_1 main ] stop
						 */

						/**
						 * [tKafkaOutput_1 process_data_begin ] start
						 */

						currentComponent = "tKafkaOutput_1";

						/**
						 * [tKafkaOutput_1 process_data_begin ] stop
						 */

						/**
						 * [tKafkaOutput_1 process_data_end ] start
						 */

						currentComponent = "tKafkaOutput_1";

						/**
						 * [tKafkaOutput_1 process_data_end ] stop
						 */

						/**
						 * [tJavaRow_1 process_data_end ] start
						 */

						currentComponent = "tJavaRow_1";

						/**
						 * [tJavaRow_1 process_data_end ] stop
						 */

						/**
						 * [tWriteJSONField_1_In process_data_end ] start
						 */

						currentVirtualComponent = "tWriteJSONField_1";

						currentComponent = "tWriteJSONField_1_In";

						/**
						 * [tWriteJSONField_1_In process_data_end ] stop
						 */

						/**
						 * [tWriteJSONField_1_In end ] start
						 */

						currentVirtualComponent = "tWriteJSONField_1";

						currentComponent = "tWriteJSONField_1_In";

					}
				}

				String readFinishWithExceptionMarkWithPipeId_tWriteJSONField_1_In = "tWriteJSONField_1_In_FINISH_WITH_EXCEPTION"
						+ (queue_tWriteJSONField_1_In == null ? "" : queue_tWriteJSONField_1_In.hashCode());
				if (globalMap.containsKey(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_1_In)) {
					if (!(globalMap instanceof java.util.concurrent.ConcurrentHashMap)) {
						globalMap.put(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_1_In, null);// syn
					}
					globalMap.remove(readFinishWithExceptionMarkWithPipeId_tWriteJSONField_1_In);
					return;
				}
				globalMap.remove("queue_tWriteJSONField_1_In");

				if (!(globalMap instanceof java.util.concurrent.ConcurrentHashMap)) {
					globalMap.put(readFinishMarkWithPipeId_tWriteJSONField_1_In, null);// syn
				}
				globalMap.remove(readFinishMarkWithPipeId_tWriteJSONField_1_In);

				globalMap.put("tWriteJSONField_1_NB_LINE", nb_line_tWriteJSONField_1_In);

				ok_Hash.put("tWriteJSONField_1_In", true);
				end_Hash.put("tWriteJSONField_1_In", System.currentTimeMillis());

				/**
				 * [tWriteJSONField_1_In end ] stop
				 */

				/**
				 * [tJavaRow_1 end ] start
				 */

				currentComponent = "tJavaRow_1";

				globalMap.put("tJavaRow_1_NB_LINE", nb_line_tJavaRow_1);

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null || !((Boolean) resourceMap.get("inIterateVComp"))) {
						runStat.updateStatOnConnection("row2" + iterateId, 2, 0);
					}
				}

				ok_Hash.put("tJavaRow_1", true);
				end_Hash.put("tJavaRow_1", System.currentTimeMillis());

				/**
				 * [tJavaRow_1 end ] stop
				 */

				/**
				 * [tKafkaOutput_1 end ] start
				 */

				currentComponent = "tKafkaOutput_1";

				final long tKafkaOutput_1_startCheckingTime = System.nanoTime();
				while (tKafkaOutput_1_counter_send > tKafkaOutput_1_counter_rev.intValue()
						&& java.util.concurrent.TimeUnit.NANOSECONDS.toSeconds(System.nanoTime()
								- tKafkaOutput_1_startCheckingTime) < tKafkaOutput_1_EXCEPTION_CATCH_TIMEOUT)
					;
				if (tKafkaOutput_1_counter_send <= tKafkaOutput_1_counter_rev.intValue()) {
					if (!tKafkaOutput_1_producerExceptions.isEmpty()) {
						Exception e = tKafkaOutput_1_producerExceptions.iterator().next();

						if (e instanceof org.apache.kafka.common.errors.AuthenticationException
								|| e instanceof org.apache.kafka.common.errors.AuthorizationException
								|| e instanceof org.apache.kafka.common.errors.UnknownServerException
								|| e instanceof org.apache.kafka.common.errors.UnsupportedVersionException) {
							throw e;
						} else {

						}

					}
				}

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null || !((Boolean) resourceMap.get("inIterateVComp"))) {
						runStat.updateStatOnConnection("row3" + iterateId, 2, 0);
					}
				}

				ok_Hash.put("tKafkaOutput_1", true);
				end_Hash.put("tKafkaOutput_1", System.currentTimeMillis());

				/**
				 * [tKafkaOutput_1 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			te.setVirtualComponentName(currentVirtualComponent);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tWriteJSONField_1_In finally ] start
				 */

				currentVirtualComponent = "tWriteJSONField_1";

				currentComponent = "tWriteJSONField_1_In";

				/**
				 * [tWriteJSONField_1_In finally ] stop
				 */

				/**
				 * [tJavaRow_1 finally ] start
				 */

				currentComponent = "tJavaRow_1";

				/**
				 * [tJavaRow_1 finally ] stop
				 */

				/**
				 * [tKafkaOutput_1 finally ] start
				 */

				currentComponent = "tKafkaOutput_1";

				org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]> tKafkaOutput_1_kafkaProducerToClose = (org.apache.kafka.clients.producer.KafkaProducer<byte[], byte[]>) globalMap
						.get("tKafkaOutput_1_kafkaProducer");
				if (null != tKafkaOutput_1_kafkaProducerToClose) {
					tKafkaOutput_1_kafkaProducerToClose.close();
					globalMap.remove("tKafkaOutput_1_kafkaProducer");
				}

				/**
				 * [tKafkaOutput_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tWriteJSONField_1_In_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	private PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final cassandra2kafka cassandra2kafkaClass = new cassandra2kafka();

		int exitCode = cassandra2kafkaClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket can't open
				System.err.println("The statistics socket port " + portStats + " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = cassandra2kafka.class.getClassLoader()
					.getResourceAsStream("debat_national/cassandra2kafka_1_0/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = cassandra2kafka.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				// defaultProps is in order to keep the original context value
				if (context != null && context.isEmpty()) {
					defaultProps.load(inContext);
					context = new ContextProperties(defaultProps);
				}

				inContext.close();
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
					context.setContextType("topic", "id_String");
					context.topic = (String) context.getProperty("topic");
					context.setContextType("cassandra_host", "id_String");
					context.cassandra_host = (String) context.getProperty("cassandra_host");
					context.setContextType("cassandra_port", "id_String");
					context.cassandra_port = (String) context.getProperty("cassandra_port");
					context.setContextType("column_family", "id_String");
					context.column_family = (String) context.getProperty("column_family");
					context.setContextType("data", "id_String");
					context.data = (String) context.getProperty("data");
					context.setContextType("group_cassandra", "id_String");
					context.group_cassandra = (String) context.getProperty("group_cassandra");
					context.setContextType("kafka_host", "id_String");
					context.kafka_host = (String) context.getProperty("kafka_host");
					context.setContextType("keyspace", "id_String");
					context.keyspace = (String) context.getProperty("keyspace");
					context.setContextType("local", "id_String");
					context.local = (String) context.getProperty("local");
					context.setContextType("topic_elasticsearch", "id_String");
					context.topic_elasticsearch = (String) context.getProperty("topic_elasticsearch");
					context.setContextType("url", "id_String");
					context.url = (String) context.getProperty("url");
					context.setContextType("zookeeper_host", "id_String");
					context.zookeeper_host = (String) context.getProperty("zookeeper_host");
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
			if (parentContextMap.containsKey("topic")) {
				context.topic = (String) parentContextMap.get("topic");
			}
			if (parentContextMap.containsKey("cassandra_host")) {
				context.cassandra_host = (String) parentContextMap.get("cassandra_host");
			}
			if (parentContextMap.containsKey("cassandra_port")) {
				context.cassandra_port = (String) parentContextMap.get("cassandra_port");
			}
			if (parentContextMap.containsKey("column_family")) {
				context.column_family = (String) parentContextMap.get("column_family");
			}
			if (parentContextMap.containsKey("data")) {
				context.data = (String) parentContextMap.get("data");
			}
			if (parentContextMap.containsKey("group_cassandra")) {
				context.group_cassandra = (String) parentContextMap.get("group_cassandra");
			}
			if (parentContextMap.containsKey("kafka_host")) {
				context.kafka_host = (String) parentContextMap.get("kafka_host");
			}
			if (parentContextMap.containsKey("keyspace")) {
				context.keyspace = (String) parentContextMap.get("keyspace");
			}
			if (parentContextMap.containsKey("local")) {
				context.local = (String) parentContextMap.get("local");
			}
			if (parentContextMap.containsKey("topic_elasticsearch")) {
				context.topic_elasticsearch = (String) parentContextMap.get("topic_elasticsearch");
			}
			if (parentContextMap.containsKey("url")) {
				context.url = (String) parentContextMap.get("url");
			}
			if (parentContextMap.containsKey("zookeeper_host")) {
				context.zookeeper_host = (String) parentContextMap.get("zookeeper_host");
			}
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		try {
			errorCode = null;
			tPrejob_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tPrejob_1) {
			globalMap.put("tPrejob_1_SUBPROCESS_STATE", -1);

			e_tPrejob_1.printStackTrace();

		}

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tCassandraInput_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tCassandraInput_1) {
			globalMap.put("tCassandraInput_1_SUBPROCESS_STATE", -1);

			e_tCassandraInput_1.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		try {
			errorCode = null;
			tPostjob_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tPostjob_1) {
			globalMap.put("tPostjob_1_SUBPROCESS_STATE", -1);

			e_tPostjob_1.printStackTrace();

		}

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println(
					(endUsedMemory - startUsedMemory) + " bytes memory increase when running : cassandra2kafka");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;
		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {
		closeCassandraConnections();

	}

	private void closeCassandraConnections() {
		try {
			Object obj_cluster;
			Object obj_conn;
			obj_cluster = globalMap.remove("cluster_tCassandraConnection_1");
			obj_conn = globalMap.remove("connection_tCassandraConnection_1");
			if (obj_conn != null) {
				((com.datastax.driver.core.Session) obj_conn).close();
			}
			if (obj_cluster != null) {
				((com.datastax.driver.core.Cluster) obj_cluster).close();
			}
		} catch (java.lang.Exception e) {
		}
	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();
		connections.put("connection_tCassandraConnection_1", globalMap.get("connection_tCassandraConnection_1"));
		connections.put("cluster_tCassandraConnection_1", globalMap.get("cluster_tCassandraConnection_1"));

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--monitoring=")) {// for trunjob call
			enableLogStash = "true".equalsIgnoreCase(arg.substring(13));
		}

		if (!enableLogStash) {
			enableLogStash = "true".equalsIgnoreCase(System.getProperty("monitoring"));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 153828 characters generated by Talend Open Studio for Big Data on the
 * September 10, 2019 at 11:31:28 AM UTC
 ************************************************************************************************/